I"'<h4 id="bx和内存单元">[bx]和内存单元</h4>

<p>我们在debug中，可以输入以下命令来执行对于段地址偏移地址的操作：</p>

<pre><code class="language-asm">mov ax, [0]     ；字传输
mov al, [0]     ；字节传输
</code></pre>
<p>但是当我们将这个命令在编译环境下执行，则会出现问题，例如我们写一个汇编脚本：</p>

<pre><code class="language-x86asm">assume cs:codesg

codesg segment

start: mov ax, 2000H
       mov ds, ax
       mov al, [0]
       mov bl, [1]
       mov cl, [2]
       mov dl, [3]

       mov ax, 4C00H
       int 21H

codesg ends

end start
</code></pre>
<p>然后我们在debug中进行调试, 如图所示：</p>

<p><img src="/assets/201910/2019-10-24_11-34-42.png" alt="figure" /></p>

<p>我们发现随着<code class="language-plaintext highlighter-rouge">mov bx, [n]</code>的执行，通用寄存器BX的值发生改变。</p>

<p>这是因为在编译环境下，无法识别debug中我们用到的内存单元表示” [] “。</p>

<h3 id="51-bx">5.1 [BX]</h3>

<p>在编译环境下我们有替代的方法：</p>

<pre><code class="language-x86asm">mov ax, [bx]
</code></pre>

<p>功能为在bx中存放的数据作为一个偏移地址EA, 段地址SA默认在DS中，将SA:EA处的数据送入AX中。即：</p>

<p>$(AX)=((DS)*16+(BX))$</p>

<p>另一个用法为：</p>

<pre><code class="language-x86asm">mov [bx], ax
</code></pre>

<p>功能为在bx中存放的数据作为一个偏移地址EA, 段地址SA默认在DS中，将AX中的数据送入内存SA:EA处。即：</p>

<p>$((DS)*16+(BX))=(AX)$</p>

<p>注：<code class="language-plaintext highlighter-rouge">inc</code>命令, 含义为在BX中的内容加1，如：</p>

<pre><code class="language-x86asm">mov bx, 1
inc bx
</code></pre>

<p>执行后，BX = 2。</p>
:ET