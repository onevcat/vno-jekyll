I"ӛ<p>整理自小甲鱼<a href="https://fishc.com.cn/">鱼C论坛</a></p>

<h3 id="描述符的概念">描述符的概念</h3>

<p>描述符就是将某种<strong>特殊类型的类的实例</strong>指派给<strong>另一个类</strong>的属性。而这个特殊类型的类，就是至少要再这个类里面定义__get__()、__set__()或__delete__()三个特殊方法中的任意一个。</p>

<table>
  <thead>
    <tr>
      <th>魔法方法</th>
      <th>含义</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>__get__(self, instance, owner)</td>
      <td>用于访问属性，它返回属性的值</td>
    </tr>
    <tr>
      <td>__set__(self, instance, value)</td>
      <td>将在属性分配操作中调用，不返回任何内容</td>
    </tr>
    <tr>
      <td>__delete__(self, instance)</td>
      <td>控制删除操作，不返回任何内容</td>
    </tr>
  </tbody>
</table>

<h3 id="描述符的解释">描述符的解释</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">MyDespritor</span><span class="p">:</span>
    <span class="k">def</span> <span class="nf">__get__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">instance</span><span class="p">,</span> <span class="n">owner</span><span class="p">):</span>
        <span class="k">print</span><span class="p">(</span><span class="s">"getting..."</span><span class="p">,</span> <span class="bp">self</span><span class="p">,</span> <span class="n">instance</span><span class="p">,</span> <span class="n">owner</span><span class="p">)</span>

    <span class="k">def</span> <span class="nf">__set__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">instance</span><span class="p">,</span> <span class="n">value</span><span class="p">):</span>
        <span class="k">print</span><span class="p">(</span><span class="s">"setting..."</span><span class="p">,</span> <span class="bp">self</span><span class="p">,</span> <span class="n">instance</span><span class="p">,</span> <span class="n">value</span><span class="p">)</span>

    <span class="k">def</span> <span class="nf">__delete__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">instance</span><span class="p">):</span>
        <span class="k">print</span><span class="p">(</span><span class="s">"deleting..."</span><span class="p">,</span> <span class="bp">self</span><span class="p">,</span> <span class="n">instance</span><span class="p">)</span>

<span class="k">class</span> <span class="nc">Test</span><span class="p">:</span>
    <span class="n">x</span> <span class="o">=</span> <span class="n">MyDespritor</span><span class="p">()</span>
</code></pre></div></div>

<p>MyDespritor实现了__get__()、__set__()和__delete__()方法，并且将它的类实例指派给Test类的属性，所以MyDescriptor就是描述符类。</p>

<p>当实例化Test类没然后尝试对x属性进行各种操作，看看描述符类的响应：</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> <span class="n">test</span> <span class="o">=</span> <span class="n">Test</span><span class="p">()</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">test</span><span class="p">.</span><span class="n">x</span>
<span class="n">getting</span><span class="p">...</span> <span class="o">&lt;</span><span class="n">__main__</span><span class="p">.</span><span class="n">MyDescriptor</span> <span class="nb">object</span> <span class="n">at</span> <span class="mh">0x02D7FE90</span><span class="o">&gt;</span>  
            <span class="c1"># self，是描述符类自身的实例
</span>
           <span class="o">&lt;</span><span class="n">__main__</span><span class="p">.</span><span class="n">Test</span> <span class="nb">object</span> <span class="n">at</span> <span class="mh">0x02FE0930</span><span class="o">&gt;</span> 
            <span class="c1"># instance，是这个描述符的拥有者所在的类的实例
</span>
           <span class="o">&lt;</span><span class="k">class</span> <span class="err">'</span><span class="nc">__main__</span><span class="p">.</span><span class="n">Test</span><span class="s">'&gt;
            # owner, 是这个描述符的拥有者所在的类本身
</span></code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> <span class="n">test</span><span class="p">.</span><span class="n">x</span> <span class="o">=</span> <span class="s">'X-man'</span>
<span class="n">setting</span><span class="p">...</span> <span class="o">&lt;</span><span class="n">__main__</span><span class="p">.</span><span class="n">MyDescriptor</span> <span class="nb">object</span> <span class="n">at</span> <span class="mh">0x02D7FE90</span><span class="o">&gt;</span>
           <span class="o">&lt;</span><span class="n">__main__</span><span class="p">.</span><span class="n">Test</span> <span class="nb">object</span> <span class="n">at</span> <span class="mh">0x02FE0930</span><span class="o">&gt;</span>
           <span class="n">X</span><span class="o">-</span><span class="n">man</span>    <span class="c1"># 最有一个参数value的值
</span></code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> <span class="k">del</span> <span class="n">test</span><span class="p">.</span><span class="n">x</span>
<span class="n">deleting</span><span class="p">...</span> <span class="o">&lt;</span><span class="n">__main__</span><span class="p">.</span><span class="n">MyDescriptor</span> <span class="nb">object</span> <span class="n">at</span> <span class="mh">0x02D7FE90</span><span class="o">&gt;</span>
            <span class="o">&lt;</span><span class="n">__main__</span><span class="p">.</span><span class="n">Test</span> <span class="nb">object</span> <span class="n">at</span> <span class="mh">0x02FE0930</span><span class="o">&gt;</span>
</code></pre></div></div>

<h3 id="property函数的原理">property()函数的原理</h3>

<h4 id="复习property函数">复习property()函数</h4>

<h5 id="什么是property函数">什么是property()函数</h5>

<p>property()返回一个可以设置属性的属性，当然如何设置属性还是需要人为来写代码。第一个参数是获得属性的方法名，第二个参数是设置属性的方法名，第三个参数是删除属性的方法名。例如，</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">C</span><span class="p">:</span>
    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span><span class="mi">10</span><span class="p">):</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">size</span> <span class="o">=</span> <span class="n">size</span>

    <span class="k">def</span> <span class="nf">getSize</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">value</span><span class="p">):</span>
        <span class="k">return</span> <span class="bp">self</span><span class="p">.</span><span class="n">size</span>

    <span class="k">def</span> <span class="nf">setSize</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">value</span><span class="p">):</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">size</span> <span class="o">=</span> <span class="n">value</span>

    <span class="k">def</span> <span class="nf">delSize</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="k">del</span> <span class="bp">self</span><span class="p">.</span><span class="n">size</span>

    <span class="n">x</span> <span class="o">=</span> <span class="nb">property</span><span class="p">(</span><span class="n">getSize</span><span class="p">,</span> <span class="n">setSzie</span><span class="p">,</span> <span class="n">delSize</span><span class="p">)</span>
</code></pre></div></div>

<h5 id="property函数的作用">property()函数的作用</h5>

<p>当我们想要对程序进行大概，就可能需要把setSize和getSize修改为setXSize和getXSize，那就不得不修改用户调用的接口，这样的体验非常不好。</p>

<p>有了property()，为用户访问size属性，只提供了x属性。无论内部如何改动，只需要相应地修改property()的参数，<strong>用户仍然只需要去操作x属性即可</strong>，没有任何影响。如下，</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> <span class="n">c</span> <span class="o">=</span> <span class="n">C</span><span class="p">()</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">c</span><span class="p">.</span><span class="n">x</span>
<span class="mi">10</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">c</span><span class="p">.</span><span class="n">x</span> <span class="o">=</span> <span class="mi">12</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">c</span><span class="p">.</span><span class="n">x</span>
<span class="mi">12</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">c</span><span class="p">.</span><span class="n">size</span>
<span class="mi">12</span>
<span class="o">&gt;&gt;&gt;</span> <span class="k">del</span> <span class="n">c</span><span class="p">.</span><span class="n">x</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">c</span><span class="p">.</span><span class="n">size</span>
<span class="nb">AttributeError</span><span class="p">:</span> <span class="s">'C'</span> <span class="nb">object</span> <span class="n">has</span> <span class="n">no</span> <span class="n">attribute</span> <span class="s">'size'</span>
</code></pre></div></div>

<h3 id="property函数的原理-1">property()函数的原理</h3>

<p>通过描述符写一个类似于property()的Myproperty(),</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">Myproperty</span><span class="p">:</span>
    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">fget</span> <span class="o">=</span> <span class="bp">None</span><span class="p">,</span> <span class="n">fset</span> <span class="o">=</span> <span class="bp">None</span><span class="p">,</span> <span class="n">fdel</span> <span class="o">=</span> <span class="bp">None</span><span class="p">):</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">fget</span> <span class="o">=</span> <span class="n">fget</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">fset</span> <span class="o">=</span> <span class="n">fset</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">fdel</span> <span class="o">=</span> <span class="n">fdel</span>

    <span class="k">def</span> <span class="nf">__get__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">instance</span><span class="p">,</span> <span class="n">owner</span><span class="p">):</span>
        <span class="k">return</span> <span class="bp">self</span><span class="p">.</span><span class="n">fget</span><span class="p">(</span><span class="n">instance</span><span class="p">)</span>

    <span class="k">def</span> <span class="nf">__set__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">instance</span><span class="p">,</span> <span class="n">value</span><span class="p">):</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">value</span> <span class="o">=</span> <span class="n">value</span>

    <span class="k">def</span> <span class="nf">__delete__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">instance</span><span class="p">):</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">fdel</span><span class="p">(</span><span class="n">instance</span><span class="p">)</span>

<span class="k">class</span> <span class="nc">C</span><span class="p">:</span>
    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">_x</span> <span class="o">=</span> <span class="bp">None</span>

    <span class="k">def</span> <span class="nf">getX</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="k">return</span> <span class="bp">self</span><span class="p">.</span><span class="n">_x</span>

    <span class="k">def</span> <span class="nf">setX</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">value</span><span class="p">):</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">_x</span> <span class="o">=</span> <span class="n">value</span>

    <span class="k">def</span> <span class="nf">delX</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="k">del</span> <span class="bp">self</span><span class="p">.</span><span class="n">_x</span>

    <span class="n">x</span> <span class="o">=</span> <span class="n">Myproperty</span><span class="p">(</span><span class="n">getX</span><span class="p">,</span> <span class="n">setX</span><span class="p">,</span> <span class="n">delX</span><span class="p">)</span>


<span class="o">&gt;&gt;&gt;</span> <span class="n">c</span> <span class="o">=</span> <span class="n">C</span><span class="p">()</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">c</span><span class="p">.</span><span class="n">x</span> <span class="o">=</span> <span class="s">'X-man'</span>  <span class="c1"># 用x去干预_x
</span><span class="o">&gt;&gt;&gt;</span> <span class="n">c</span><span class="p">.</span><span class="n">x</span>
<span class="s">'X-man'</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">c</span><span class="p">.</span><span class="n">_x</span>
<span class="s">'X-man'</span>
<span class="o">&gt;&gt;&gt;</span> <span class="k">del</span> <span class="n">c</span><span class="p">.</span><span class="n">x</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">c</span><span class="p">.</span><span class="n">_x</span>
<span class="nb">AttributeError</span><span class="p">:</span> <span class="s">'C'</span> <span class="nb">object</span> <span class="n">has</span> <span class="n">no</span> <span class="n">attributer</span> <span class="s">'_x'</span>
</code></pre></div></div>

<p>从而实现了property()函数的功能。</p>

<p>最后从一个实例来总结一下描述符：</p>

<p>先定义一个温度类，然后定义两个描述符类用于描述摄氏度和华氏度两个属性。两个属性会自动进行转换，也就是说，可以给摄氏度这个属性赋值，然后打印的华氏度属性是自动转换后的结果。</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">Celsius</span><span class="p">:</span>        <span class="c1"># 摄氏度的描述符类
</span>    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">value</span> <span class="o">=</span> <span class="mf">26.0</span><span class="p">):</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">value</span> <span class="o">=</span> <span class="nb">float</span><span class="p">(</span><span class="n">value</span><span class="p">)</span>

    <span class="k">def</span> <span class="nf">__get__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">instance</span><span class="p">,</span> <span class="n">owner</span><span class="p">):</span>
        <span class="k">return</span> <span class="bp">self</span><span class="p">.</span><span class="n">value</span>

    <span class="k">def</span> <span class="nf">__set__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">instance</span><span class="p">,</span> <span class="n">value</span><span class="p">):</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">value</span> <span class="o">=</span> <span class="nb">float</span><span class="p">(</span><span class="n">value</span><span class="p">)</span>

<span class="k">class</span> <span class="nc">Fahrenheit</span><span class="p">:</span>
    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">value</span> <span class="o">=</span> <span class="mf">78.8</span><span class="p">):</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">value</span> <span class="o">=</span> <span class="nb">float</span><span class="p">(</span><span class="n">value</span><span class="p">)</span> <span class="o">*</span><span class="mf">1.8</span>

    <span class="k">def</span> <span class="nf">__get__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">instance</span><span class="p">,</span> <span class="n">owner</span><span class="p">):</span>
        <span class="k">return</span> <span class="n">instance</span><span class="p">.</span><span class="n">cel</span> <span class="o">*</span> <span class="mf">1.8</span> <span class="o">+</span> <span class="mi">32</span>

    <span class="k">def</span> <span class="nf">__set__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">instance</span><span class="p">,</span> <span class="n">value</span><span class="p">):</span>
<span class="c1"># 因为要用华氏度去设置，所以要用逆运算先计算出摄氏度，在执行__set__()方法
</span>        <span class="n">instance</span><span class="p">.</span><span class="n">cel</span> <span class="o">=</span> <span class="p">(</span><span class="nb">float</span><span class="p">(</span><span class="n">value</span><span class="p">)</span> <span class="o">-</span> <span class="mi">32</span><span class="p">)</span> <span class="o">/</span> <span class="mf">1.8</span>

<span class="k">class</span> <span class="nc">Temperature</span><span class="p">:</span>
    <span class="n">cel</span> <span class="o">=</span> <span class="n">Celsius</span><span class="p">()</span>
    <span class="n">fah</span> <span class="o">=</span> <span class="n">Fahrenheit</span><span class="p">()</span>


<span class="o">&gt;&gt;&gt;</span> <span class="n">temp</span> <span class="o">=</span> <span class="n">Temperature</span><span class="p">()</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">temp</span><span class="p">.</span><span class="n">cel</span>
<span class="mf">26.0</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">temp</span><span class="p">.</span><span class="n">fah</span>
<span class="mf">78.80000000000001</span>
</code></pre></div></div>

<h3 id="问题">问题</h3>

<p>(1) 按要求编写描述符 MyDes：当类的属性被访问、修改或设置的时候，分别作出提醒。</p>

<p>要求:</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> <span class="k">class</span> <span class="nc">Test</span><span class="p">:</span>
        <span class="n">x</span> <span class="o">=</span> <span class="n">MyDes</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="s">'x'</span><span class="p">)</span>

<span class="o">&gt;&gt;&gt;</span> <span class="n">test</span> <span class="o">=</span> <span class="n">Test</span><span class="p">()</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">y</span> <span class="o">=</span> <span class="n">test</span><span class="p">.</span><span class="n">x</span>
<span class="n">正在获取变量</span><span class="err">：</span><span class="n">x</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">y</span>
<span class="mi">10</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">test</span><span class="p">.</span><span class="n">x</span> <span class="o">=</span> <span class="mi">8</span>
<span class="n">正在修改变量</span><span class="err">：</span><span class="n">x</span>
<span class="o">&gt;&gt;&gt;</span> <span class="k">del</span> <span class="n">test</span><span class="p">.</span><span class="n">x</span>
<span class="n">正在删除变量</span><span class="err">：</span><span class="n">x</span>
<span class="n">噢</span><span class="o">~</span><span class="n">这个变量没法删除</span><span class="o">~</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">test</span><span class="p">.</span><span class="n">x</span>
<span class="n">正在获取变量</span><span class="err">：</span><span class="n">x</span>
<span class="mi">8</span>
</code></pre></div></div>

<p>代码：</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">MyDespritor</span><span class="p">:</span>
    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">value</span> <span class="o">=</span> <span class="bp">None</span><span class="p">,</span> <span class="n">name</span> <span class="o">=</span> <span class="bp">None</span><span class="p">):</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">value</span> <span class="o">=</span> <span class="n">value</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">name</span>  <span class="o">=</span> <span class="n">name</span>
    <span class="k">def</span> <span class="nf">__get__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">instance</span><span class="p">,</span> <span class="n">owner</span><span class="p">):</span>
        <span class="k">print</span><span class="p">(</span><span class="s">"正在获取变量："</span> <span class="o">+</span> <span class="bp">self</span><span class="p">.</span><span class="n">name</span><span class="p">)</span>
        <span class="k">return</span> <span class="bp">self</span><span class="p">.</span><span class="n">value</span>
    <span class="k">def</span> <span class="nf">__set__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">instance</span><span class="p">,</span> <span class="n">value</span><span class="p">):</span>
        <span class="k">print</span><span class="p">(</span><span class="s">"正在修改变量："</span> <span class="o">+</span> <span class="bp">self</span><span class="p">.</span><span class="n">name</span><span class="p">)</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">value</span> <span class="o">=</span> <span class="n">value</span>
    <span class="k">def</span> <span class="nf">__delete__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">instance</span><span class="p">):</span>
        <span class="k">print</span><span class="p">(</span><span class="s">"正在删除变量："</span> <span class="o">+</span> <span class="bp">self</span><span class="p">.</span><span class="n">name</span> <span class="o">+</span> <span class="s">'</span><span class="se">\n</span><span class="s">'</span>
              <span class="s">"噢~这个变量没法删除~"</span><span class="p">)</span>

<span class="k">class</span> <span class="nc">Test</span><span class="p">:</span>
    <span class="n">x</span> <span class="o">=</span> <span class="n">MyDespritor</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="s">'x'</span><span class="p">)</span>

<span class="n">test</span> <span class="o">=</span> <span class="n">Test</span><span class="p">()</span>
<span class="n">y</span> <span class="o">=</span> <span class="n">test</span><span class="p">.</span><span class="n">x</span>
<span class="k">print</span><span class="p">(</span><span class="n">y</span><span class="p">)</span>
<span class="n">test</span><span class="p">.</span><span class="n">x</span> <span class="o">=</span> <span class="mi">8</span>
<span class="k">del</span> <span class="n">test</span><span class="p">.</span><span class="n">x</span>
<span class="n">test</span><span class="p">.</span><span class="n">x</span>
<span class="k">print</span><span class="p">(</span><span class="n">test</span><span class="p">.</span><span class="n">x</span><span class="p">)</span>
</code></pre></div></div>

<p>(2) 按要求编写描述符 MyDes：记录指定变量的读取和写入操作，并将记录以及触发时间保存到文件(record.txt)</p>

<p>要求：</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> <span class="k">class</span> <span class="nc">Test</span><span class="p">:</span>
        <span class="n">x</span> <span class="o">=</span> <span class="n">Record</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="s">'x'</span><span class="p">)</span>
        <span class="n">y</span> <span class="o">=</span> <span class="n">Record</span><span class="p">(</span><span class="mf">8.8</span><span class="p">,</span> <span class="s">'y'</span><span class="p">)</span>

<span class="o">&gt;&gt;&gt;</span> <span class="n">test</span> <span class="o">=</span> <span class="n">Test</span><span class="p">()</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">test</span><span class="p">.</span><span class="n">x</span>
<span class="mi">10</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">test</span><span class="p">.</span><span class="n">y</span>
<span class="mf">8.8</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">test</span><span class="p">.</span><span class="n">x</span> <span class="o">=</span> <span class="mi">123</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">test</span><span class="p">.</span><span class="n">x</span> <span class="o">=</span> <span class="mf">1.23</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">test</span><span class="p">.</span><span class="n">y</span> <span class="o">=</span> <span class="s">'I love FishC.com!'</span>
</code></pre></div></div>

<p>并产生record.txt。</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>x变量于北京时间Thu Dec 26 20:20:29 2019被读取，x = 10
y变量于北京时间Thu Dec 26 20:20:29 2019被读取，y = 8.8
x变量与北京时间Thu Dec 26 20:20:29 2019被修改，x = 123
x变量与北京时间Thu Dec 26 20:20:29 2019被修改，x = 1.23
y变量与北京时间Thu Dec 26 20:20:29 2019被修改，y = I love FIshC.com
</code></pre></div></div>

<p>代码如下，</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">time</span>

<span class="k">class</span> <span class="nc">Record</span><span class="p">:</span>
    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">value</span> <span class="o">=</span> <span class="bp">None</span><span class="p">,</span> <span class="n">name</span> <span class="o">=</span> <span class="bp">None</span><span class="p">):</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">value</span> <span class="o">=</span> <span class="n">value</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">name</span> <span class="o">=</span> <span class="n">name</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">filename</span> <span class="o">=</span> <span class="s">'record.txt'</span>

    <span class="k">def</span> <span class="nf">__get__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">instance</span><span class="p">,</span> <span class="n">owner</span><span class="p">):</span>
        <span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="bp">self</span><span class="p">.</span><span class="n">filename</span><span class="p">,</span> <span class="s">'a'</span><span class="p">,</span> <span class="n">encoding</span> <span class="o">=</span> <span class="s">'utf-8'</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
            <span class="n">f</span><span class="p">.</span><span class="n">write</span><span class="p">(</span><span class="s">'%s变量于北京时间%s被读取，%s = %s</span><span class="se">\n</span><span class="s">'</span> <span class="o">%</span> \
                    <span class="p">(</span><span class="bp">self</span><span class="p">.</span><span class="n">name</span><span class="p">,</span> <span class="n">time</span><span class="p">.</span><span class="n">ctime</span><span class="p">(),</span> <span class="bp">self</span><span class="p">.</span><span class="n">name</span><span class="p">,</span> <span class="bp">self</span><span class="p">.</span><span class="n">value</span><span class="p">))</span>
        <span class="k">return</span> <span class="bp">self</span><span class="p">.</span><span class="n">value</span>

    <span class="k">def</span> <span class="nf">__set__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">instance</span><span class="p">,</span> <span class="n">value</span><span class="p">):</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">value</span> <span class="o">=</span> <span class="n">value</span>
        <span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="bp">self</span><span class="p">.</span><span class="n">filename</span><span class="p">,</span> <span class="s">'a'</span><span class="p">,</span> <span class="n">encoding</span> <span class="o">=</span> <span class="s">'utf-8'</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
            <span class="n">f</span><span class="p">.</span><span class="n">write</span><span class="p">(</span><span class="s">'%s变量与北京时间%s被修改，%s = %s</span><span class="se">\n</span><span class="s">'</span> <span class="o">%</span> \
                    <span class="p">(</span><span class="bp">self</span><span class="p">.</span><span class="n">name</span><span class="p">,</span> <span class="n">time</span><span class="p">.</span><span class="n">ctime</span><span class="p">(),</span> <span class="bp">self</span><span class="p">.</span><span class="n">name</span><span class="p">,</span> <span class="bp">self</span><span class="p">.</span><span class="n">value</span><span class="p">))</span>

<span class="k">class</span> <span class="nc">Test</span><span class="p">:</span>
    <span class="n">x</span> <span class="o">=</span> <span class="n">Record</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="s">'x'</span><span class="p">)</span>
    <span class="n">y</span> <span class="o">=</span> <span class="n">Record</span><span class="p">(</span><span class="mf">8.8</span><span class="p">,</span> <span class="s">'y'</span><span class="p">)</span>

<span class="n">test</span> <span class="o">=</span> <span class="n">Test</span><span class="p">()</span>
<span class="k">print</span><span class="p">(</span><span class="n">test</span><span class="p">.</span><span class="n">x</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">test</span><span class="p">.</span><span class="n">y</span><span class="p">)</span>
<span class="n">test</span><span class="p">.</span><span class="n">x</span> <span class="o">=</span> <span class="mi">123</span>
<span class="n">test</span><span class="p">.</span><span class="n">x</span> <span class="o">=</span> <span class="mf">1.23</span>
<span class="n">test</span><span class="p">.</span><span class="n">y</span> <span class="o">=</span> <span class="s">'I love FIshC.com'</span>
</code></pre></div></div>

<p>(3) 编写描述符 MyDes，使用文件来存储属性，属性的值会直接存储到对应的pickle文件。如果属性被删除了，文件也会同时被删除，属性的名字也会被注销。</p>

<p>要求：</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> <span class="k">class</span> <span class="nc">Test</span><span class="p">:</span>
        <span class="n">x</span> <span class="o">=</span> <span class="n">MyDes</span><span class="p">(</span><span class="s">'x'</span><span class="p">)</span>
        <span class="n">y</span> <span class="o">=</span> <span class="n">MyDes</span><span class="p">(</span><span class="s">'y'</span><span class="p">)</span>

<span class="o">&gt;&gt;&gt;</span> <span class="n">test</span> <span class="o">=</span> <span class="n">Test</span><span class="p">()</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">test</span><span class="p">.</span><span class="n">x</span> <span class="o">=</span> <span class="mi">123</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">test</span><span class="p">.</span><span class="n">y</span> <span class="o">=</span> <span class="s">"I love FishC.com!"</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">test</span><span class="p">.</span><span class="n">x</span>
<span class="mi">123</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">test</span><span class="p">.</span><span class="n">y</span>
<span class="s">'I love FishC.com!'</span>
</code></pre></div></div>
<p>产生对应的文件存储变量的值，如果我们删除x属性，对应的文件也不见了。</p>

<p>代码：</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">os</span>
<span class="kn">import</span> <span class="nn">pickle</span>

<span class="k">class</span> <span class="nc">MyDes</span><span class="p">:</span>
    <span class="n">saved</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">name</span><span class="p">,</span> <span class="n">value</span> <span class="o">=</span> <span class="bp">None</span><span class="p">):</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">name</span> <span class="o">=</span> <span class="n">name</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">value</span> <span class="o">=</span> <span class="n">value</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">filename</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">name</span> <span class="o">+</span> <span class="s">'.pkl'</span>

    <span class="k">def</span> <span class="nf">__get__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">instance</span><span class="p">,</span> <span class="n">owner</span><span class="p">):</span>
        <span class="k">if</span> <span class="bp">self</span><span class="p">.</span><span class="n">name</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">MyDes</span><span class="p">.</span><span class="n">saved</span><span class="p">:</span>
            <span class="k">raise</span> <span class="nb">AttributeError</span><span class="p">(</span><span class="s">'%s 属性还没有赋值'</span> <span class="o">%</span> <span class="bp">self</span><span class="p">.</span><span class="n">name</span><span class="p">)</span>
        <span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="bp">self</span><span class="p">.</span><span class="n">filename</span><span class="p">,</span> <span class="s">'rb'</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
            <span class="n">value</span> <span class="o">=</span> <span class="n">pickle</span><span class="p">.</span><span class="n">load</span><span class="p">(</span><span class="n">f</span><span class="p">)</span>
        <span class="k">return</span> <span class="n">value</span>

    <span class="k">def</span> <span class="nf">__set__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">instance</span><span class="p">,</span> <span class="n">value</span><span class="p">):</span>
        <span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="bp">self</span><span class="p">.</span><span class="n">filename</span><span class="p">,</span> <span class="s">'wb'</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
            <span class="n">pickle</span><span class="p">.</span><span class="n">dump</span><span class="p">(</span><span class="n">value</span><span class="p">,</span> <span class="n">f</span><span class="p">)</span>
            <span class="n">MyDes</span><span class="p">.</span><span class="n">saved</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="bp">self</span><span class="p">.</span><span class="n">name</span><span class="p">)</span>

    <span class="k">def</span> <span class="nf">__delete__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">instance</span><span class="p">):</span>
        <span class="n">os</span><span class="p">.</span><span class="n">remove</span><span class="p">(</span><span class="bp">self</span><span class="p">.</span><span class="n">filename</span><span class="p">)</span>
        <span class="n">MyDes</span><span class="p">.</span><span class="n">saved</span><span class="p">.</span><span class="n">remove</span><span class="p">(</span><span class="bp">self</span><span class="p">.</span><span class="n">name</span><span class="p">)</span>


<span class="k">class</span> <span class="nc">Test</span><span class="p">:</span>
    <span class="n">x</span> <span class="o">=</span> <span class="n">MyDes</span><span class="p">(</span><span class="s">'x'</span><span class="p">)</span>
    <span class="n">y</span> <span class="o">=</span> <span class="n">MyDes</span><span class="p">(</span><span class="s">'y'</span><span class="p">)</span>
</code></pre></div></div>

:ET