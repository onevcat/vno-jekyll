I"<p>The related information of correlation is mostly from <a href="https://www.youtube.com/watch?v=_r_fDlM0Dx0&amp;list=PLJ8LTUMGG9U6IcCrKDUGavUTsBn-0ajIX">David Dorran video at youtube</a>, it is very clear and easy understanding.</p>

<h3 id="what-is-correlation">What Is Correlation</h3>

<p>Correlation is a measure of <strong>how similar signals are</strong>. They are present in things like discrete Fourier transform.</p>

<p>Which is always present as equation:</p>

<p>Eq. (1)</p>

\[Corr_{x,y} = \sum_{n=0}^{N-1}x[n]\cdot y[n]\]

<p>Where $x[n]$ and $y[n]$ are two discrte function.</p>

<p>Here gives an example,</p>

<p>$x=$
\(\begin{bmatrix}1&amp;3&amp;-2&amp;4\\\end{bmatrix}\)</p>

<p>$y=$
\(\begin{bmatrix}2&amp;3&amp;-1&amp;3\\\end{bmatrix}\)</p>

<p>$z=$
\(\begin{bmatrix}2&amp;-1&amp;4&amp;-2\\\end{bmatrix}\)</p>

<p>plot them in matlab, we get this</p>

<p><img src="/assets/201910/figure1.png" alt="figure1" /></p>

<p>From this figure we can find x is similar with y but not similar with z. How we can describe this in mathematics?</p>

<p>We substitute x, y and y, z into Eq. (1),</p>

\[\begin{aligned} \operatorname{Corr}_{x, y} &amp;=x[0] y[0]+x[1] y[1]+x[2] y[2]+x[3] y[3] \\ &amp;=(1)(2)+(3)(3)+(-2)(-1)+(4)(3) \\ &amp;=2+9+2+12=25 \end{aligned}\]

<p>and</p>

\[\begin{aligned} \operatorname{Corr}_{y,z} &amp;= y[0]z[0] + y[1]z[1] + y[2]z[2] + y[3]z[3] \\ &amp;= (2)(2)+(3)(-1)+(-1)(4)+(3)(-2) \\ &amp;= -9 \end{aligned}\]

<p>However if we substitute the first 2 in Z into 100, which will lead to $Corr_{y,z} = 187$, and we will become confused, because we canâ€™t get clearly which two are more similar with the other. as seen in the figure:</p>

<p><img src="/assets/201910/figure2.png" alt="figure2" /></p>

<p>So here we need <strong>Normalised Correlation</strong>.</p>

\[\operatorname{Corr}_{norm_{x,y}}=\frac{\sum_{n=0}^{N-1} x[n]y[n]}{\sqrt{\sum_{n=0}^{N-1} x^{2}[n] \sum_{n=0}^{N-1} y^{2}[n]}}\]

<p>The two terms at denominator are the measure of energy in signal X and Y respectively, which make the denominator the overall scaling factor.</p>

<p>Basically, this normalised correlation function is this result divided by a scaling factor which is related to the energy thatâ€™s contained in the signals that you are measuring the similarity.</p>

<p>For $Corr_{x,y}=0.95$ and $Corr_{y,z}=0.38$, $Corr$ ranges in $[-1, 1]$. Which can well score the similarity.</p>

<p>Itâ€™s worth noting that, sometimes, as seen in the code demo:</p>

<div class="language-matlab highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">% This code highlights where non normalised correlation is</span>
<span class="c1">% be more beneficial than normalised correlation</span>
<span class="n">t</span> <span class="o">=</span> <span class="p">[</span><span class="mi">0</span><span class="p">:</span><span class="mi">100</span><span class="o">-</span><span class="mi">1</span><span class="p">]/</span><span class="mi">100</span><span class="p">;</span>
<span class="n">s1</span> <span class="o">=</span> <span class="nb">cos</span><span class="p">(</span><span class="mi">2</span><span class="o">*</span><span class="nb">pi</span><span class="o">*</span><span class="mi">1</span><span class="o">*</span><span class="n">t</span><span class="p">);</span>
<span class="n">s2</span> <span class="o">=</span> <span class="nb">cos</span><span class="p">(</span><span class="mi">2</span><span class="o">*</span><span class="nb">pi</span><span class="o">*</span><span class="mi">4</span><span class="o">*</span><span class="n">t</span><span class="p">);</span>
<span class="n">s3</span> <span class="o">=</span> <span class="nb">cos</span><span class="p">(</span><span class="mi">2</span><span class="o">*</span><span class="nb">pi</span><span class="o">*</span><span class="mi">10</span><span class="o">*</span><span class="n">t</span><span class="p">);</span>

<span class="c1">% The following signals contain the three sinusoids above</span>
<span class="n">a</span> <span class="o">=</span> <span class="mi">2</span><span class="o">*</span><span class="n">s1</span><span class="o">+</span><span class="mi">4</span><span class="o">*</span><span class="n">s2</span><span class="o">+</span><span class="n">s3</span><span class="p">;</span>
<span class="n">b</span> <span class="o">=</span> <span class="n">s1</span> <span class="o">+</span> <span class="n">s2</span><span class="p">;</span>

<span class="c1">% Comparing the results it can be seen that non-normalised</span>
<span class="c1">% correlation is useful for identifying how strongly present</span>
<span class="c1">% one signal is in another</span>
<span class="n">corr_res1</span> <span class="o">=</span> <span class="nb">sum</span><span class="p">(</span><span class="n">a</span><span class="o">.*</span><span class="n">s1</span><span class="p">)</span>
<span class="n">norm_corr_res1</span> <span class="o">=</span> <span class="nb">sum</span><span class="p">(</span><span class="n">a</span><span class="o">.*</span><span class="n">s1</span><span class="p">)/</span><span class="nb">sqrt</span><span class="p">((</span><span class="nb">sum</span><span class="p">(</span><span class="n">a</span><span class="o">.^</span><span class="mi">2</span><span class="p">)</span><span class="o">.*</span><span class="nb">sum</span><span class="p">(</span><span class="n">s1</span><span class="o">.^</span><span class="mi">2</span><span class="p">)))</span>

<span class="n">corr_res2</span> <span class="o">=</span> <span class="nb">sum</span><span class="p">(</span><span class="n">b</span><span class="o">.*</span><span class="n">s1</span><span class="p">)</span>
<span class="n">nor_corr_res2</span> <span class="o">=</span> <span class="nb">sum</span><span class="p">(</span><span class="n">b</span><span class="o">.*</span><span class="n">s1</span><span class="p">)/</span><span class="nb">sqrt</span><span class="p">((</span><span class="nb">sum</span><span class="p">(</span><span class="n">b</span><span class="o">.^</span><span class="mi">2</span><span class="p">)</span><span class="o">.*</span><span class="nb">sum</span><span class="p">(</span><span class="n">s1</span><span class="o">.^</span><span class="mi">2</span><span class="p">)))</span>
</code></pre></div></div>
<p>The output is:</p>

<div class="language-matlab highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;</span> <span class="n">NormalisedCorrelation</span>

<span class="n">corr_res1</span> <span class="o">=</span>

   <span class="mi">100</span>


   <span class="n">norm_corr_res1</span> <span class="o">=</span>

       <span class="mf">0.4364</span>


       <span class="n">corr_res2</span> <span class="o">=</span>

          <span class="mf">50.0000</span>


          <span class="n">nor_corr_res2</span> <span class="o">=</span>

              <span class="mf">0.7071</span>
</code></pre></div></div>

:ET